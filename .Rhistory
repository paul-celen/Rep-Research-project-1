dt_totaal$Freq.x_m <- dt_totaal$Freq.x/ sum_fatal       # FATAL
dt_totaal$Freq.y_m <- dt_totaal$Freq.y/ sum_injuries    # iNJURIES
dt_totaal
dt_totaal <- dt_totaal[order(-dt_totaal$score),]
dt_totaal
options(scipen=999)
dt_totaal
round((dt_totaal$Freq.x/ sum_fatal)*100,2)
round((dt_totaal$Freq.y/ sum_injuries)*100,2)
dt_totaal$Freq.x_m <- round((dt_totaal$Freq.x/ sum_fatal),2)       # FATAL
dt_totaal$Freq.y_m <- round((dt_totaal$Freq.y/ sum_injuries),2)    # iNJURIES
dt_totaal
table(PROPDMGEXP)
table(dt_storm$PROPDMGEXP)
table(dt_storm$CROPDMGEXP)
variables <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
colomn_nr_economic <-  names(dt_storm) %in% variables
dt_public_damage7500 <- dt_storm[ c(1:7500) , colomn_nr_economic ]
dt_public_damage7500
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMGEXP > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
str(dt_storm)
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
dt_economic_damage
table( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 )
table( dt_storm$PROPDMG > 0 & dt_storm$CROPDMG > 0 )
table(dt_storm$PROPDMG > 0 )
table(dt_storm$CROPDMG > 0 )
dt_public_damage$EVTYPE <- tolower(dt_public_damage$EVTYPE)
dt_economic_damage$EVTYPE <- tolower(dt_economic_damage$EVTYPE)
dt_economic_damage
dt_economic_damage[!("PROPDMGEXP" == K), ]
dt_economic_damage[!("PROPDMGEXP" == "K"), ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP == "K"), ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP == "K" | dt_economic_damage$PROPDMGEXP == "M" ), ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP == "K" | dt_economic_damage$PROPDMGEXP == "M" | dt_economic_damage$PROPDMGEXP == "" ), ]
dt_economic_damage[ EVTYPE$flash flood , ]
dt_economic_damage[dt_economic_damage$EVTYPE == "flash flood" , ]
table(dt_economic_damage[dt_economic_damage$EVTYPE == "flash flood" , ])
summary(dt_economic_damage[dt_economic_damage$EVTYPE == "flash flood" , ])
summary(dt_economic_damage[ , ])
dt_economic_damage$PROPDMGEXP <- tolower(dt_economic_damage$PROPDMGEXP)         # Prop
dt_economic_damage$CROPDMG <- tolower(dt_economic_damage$CROPDMG)               # Crop
summary(dt_economic_damage[ , ])
str(dt_economic_damage)
dt_economic_damage$PROPDMGEXP <- as.factor(tolower(dt_economic_damage$PROPDMGEXP))         # Prop
dt_economic_damage$CROPDMG <- as.factor(tolower(dt_economic_damage$CROPDMGEXP))               # Crop
summary(dt_economic_damage[ , ])
variables <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
colomn_nr_economic <-  names(dt_storm) %in% variables
# subset
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
# Convert Upper letters into small letters
dt_economic_damage$EVTYPE <- as.factor(tolower(dt_economic_damage$EVTYPE))                 # Event
dt_economic_damage$PROPDMGEXP <- as.factor(tolower(dt_economic_damage$PROPDMGEXP))         # Prop
dt_economic_damage$CROPDMGEXP <- as.factor(tolower(dt_economic_damage$CROPDMGEXP))               # Crop
summary(dt_economic_damage[ , ])
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b"), ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , dt_economic_damage$PROPDMGEXP]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]  <- ""
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , ]
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , 5]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]  <- ""         # prop
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , 5]  <- ""         # crop
dt_economic_damage
dt_economic_damage$reel_number[!(dt_economic_damage$PROPDMGEXP %in% c("h")) , ]
dt_economic_damage$reel_number[!(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]
dt_economic_damage[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]
dt_economic_damage$1[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]  <- dt_economic_damage$PROPDMGEXP[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ] * 1000
dt_economic_damage$1 <- 0
dt_economic_damage$reel_number <- 0
dt_economic_damage$PROPDMGEXP[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ] * 1000
dt_economic_damage$PROPDMGEXP[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]
dt_economic_damage[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ] * 1000
variables <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
colomn_nr_economic <-  names(dt_storm) %in% variables
# subset
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
# Convert Upper letters into small letters
dt_economic_damage$EVTYPE <- as.factor(tolower(dt_economic_damage$EVTYPE))                 # Event
dt_economic_damage$PROPDMGEXP <- as.factor(tolower(dt_economic_damage$PROPDMGEXP))         # Prop
dt_economic_damage$CROPDMGEXP <- as.factor(tolower(dt_economic_damage$CROPDMGEXP))               # Crop
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]  <- ""         # prop
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , 5]  <- ""         # crop
dt_economic_damage[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]
dt_economic_damage[(dt_economic_damage$PROPDMGEXP %in% c("k")) , 2] * 1000
dt_economic_damage$reel_number[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]  <- dt_economic_damage[(dt_economic_damage$PROPDMGEXP %in% c("k")) , 2] * 1000
dt_economic_damage$reel_number[(dt_economic_damage$PROPDMGEXP %in% c("k")) , ]  <- dt_economic_damage[, 2] * 1000
dt_economic_damage$PROPDMGEXP %in% c("k")
dt_economic_damage$reel_number[dt_economic_damage$PROPDMGEXP %in% c("k") , ]
dt_economic_damage$reel_number[dt_economic_damage$PROPDMGEXP %in% c("k") , ]
str(dt_economic_damage)
dt_economic_damage$reel_number <- 0
str(dt_economic_damage)
dt_economic_damage$reel_number[dt_economic_damage$PROPDMGEXP %in% c("k") , ]  <- dt_economic_damage[, 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[, 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]
dt_economic_damage
dt_economic_damage$reel_number_prop <- 0
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage
dt_economic_damage$reel_number_prop <- 0
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("h") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("h"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("m") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("m"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("b") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("b"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("h") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("h"), 2] * 100
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("m") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("m"), 2] * 1000000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("b") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("b"), 2] * 1000000000
dt_economic_damage
variables <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
colomn_nr_economic <-  names(dt_storm) %in% variables
# subset
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
# Convert Upper letters into small letters
dt_economic_damage$EVTYPE <- as.factor(tolower(dt_economic_damage$EVTYPE))                 # Event
dt_economic_damage$PROPDMGEXP <- as.factor(tolower(dt_economic_damage$PROPDMGEXP))         # Prop
dt_economic_damage$CROPDMGEXP <- as.factor(tolower(dt_economic_damage$CROPDMGEXP))               # Crop
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]  <- ""         # prop
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , 5]  <- ""         # crop
dt_economic_damage$reel_number_prop <- 0
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("h") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("h"), 2] * 100
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("m") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("m"), 2] * 1000000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("b") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("b"), 2] * 1000000000
# CROP
dt_economic_damage$reel_number_crop <- 0
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("h") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("h"), 4] * 100
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("k") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("k"), 4] * 1000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("m") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("m"), 4] * 1000000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("b") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("b"), 4] * 1000000000
head(dt_economic_damage,100)
head(dt_economic_damage,600)
tail(dt_economic_damage,600)
dt_prop <- as.data.frame(xtabs( reel_number_prop ~ EVTYPE, data=dt_economic_damage  ))
dt_crop <- as.data.frame(xtabs( reel_number_crop ~ EVTYPE, data=dt_economic_damage  ))
#
dt_prop
dt_crop
dt_totaal_economic <- merge(x=dt_prop , y=dt_crop , by.x="EVTYPE" , by.y="EVTYPE" )
dt_totaal_economic <- dt_totaal_economic[  (dt_totaal_economic$Freq.x + dt_totaal_economic$Freq.x) >0 , ]
#
dt_totaal_economic$score <- (dt_totaal_economic$Freq.x)+ (dt_totaal_economic$Freq.y)
#
dt_totaal_economic <- dt_totaal_economic[order(-dt_totaal_economic$score),]
dt_totaal_economic
dt_totaal_economic$share <- round(dt_totaal_economic$score/sum(dt_totaal_economic$score),2)
dt_totaal_economic
path <- "C:/Users/vobis/Desktop/werk/"
fileName <- "aalberts.csv"
dt_geocode <- read.csv(paste(path, fileName, sep = ""), sep = ";")
dt_geocode
str(dt_geocode)
dt_geocode_cus$longitude <- as.numeric(gsub(",",".",as.character(dt_geocode_cus$longitude)))
dt_geocode_cus$longitude <- as.numeric(gsub(",",".",as.character(dt_geocode$longitude)))
dt_geocode_cus$latitude <- as.numeric(gsub(",",".",as.character(dt_geocode$latitude)))
dt_geocode$longitude <- as.numeric(gsub(",",".",as.character(dt_geocode$longitude)))
dt_geocode$latitude <- as.numeric(gsub(",",".",as.character(dt_geocode$latitude)))
library(ggmap)
x1 <- "Nederland, langbroek"
x <- geocode(x1)
x
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
lon1[1]
test <- qmap(x1, zoom = 2)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = 'red') , data= dt_geocode )
test <- qmap(x1, zoom = 2)
x1 <- "Nederland"
x <- geocode(x1)
x <- as.numeric(x)
x
test <- qmap(x1, zoom = 2)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = 'red') , data= dt_geocode )
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = 'red') , data= dt_geocode )
x1 <- "Amerika"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
lon1[1]
x[2]
str(x)
str(lon1[1])
# Plot map
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = 'red') , data= dt_geocode )
x1 <- "China"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
lon1[1]
x[2]
str(x)
str(lon1[1])
# Plot map
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = 'red') , data= dt_geocode )
str(dt_geocode)
x1 <- "nederland"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
# Plot map
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
# Plot map
test <- qmap(x1, zoom = 4)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
library(ggmap)
#address centre Map
x1 <- "China"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
# Plot map
test <- qmap(x1, zoom = 4)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
x1 <- "Laos"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
# Plot map
test <- qmap(x1, zoom = 4)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
x1 <- "China"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
# Plot map
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
#address centre Map
x1 <- "Amerika"
x <- geocode(x1)
x <- as.numeric(x)
lon1 = as.numeric(round(dt_geocode$longitude,3))
lat2 = as.numeric(round(dt_geocode$latitude,3))
# Plot map
test <- qmap(x1, zoom = 3)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
test <- qmap(x1, zoom = 4)
# Plot points on Map
test + geom_point(aes(x=longitude, y= latitude , col = Segment) , data= dt_geocode )
library(ggmap)
x1 <- "5342LZ Oss steenweg 20 Nederland"
x <- geocode(x1)
x <- as.numeric(x)
x
qmap(x1, zoom = 4)
test <- qmap(x1, zoom = 4)
test + geom_point(aes(x = x[1], y = x[2]))
install("JGR")
install.packages("JGR")
library(JGR)
JGR()
JGR()
install.packages(c("JGR","Deducer","DeducerExtras"))
JGR()
library(JGR)
library(rJava)
library("JGR", lib.loc="~/R/win-library/3.1")
library("rJava", lib.loc="~/R/win-library/3.1")
# Read data Activity dataset
path <- getwd()
name <- "activity.csv"
dt_activity <- read.csv(paste(path, name, sep="/"), sep = ",")
setwd("C:/Users/vobis/Desktop/Coursera/5. Reproducible Resreach/project 1")
path <- getwd()
name <- "activity.csv"
dt_activity <- read.csv(paste(path, name, sep="/"), sep = ",")
dt_activity_1 <- dt_activity
summary(dt_activity_1)
table(dt_activity_1$interval)
table(dt_activity_1$steps)
sum(dt_activity_1$steps)
sum(dt_activity_1$steps)
dt_activity_na <- dt_activity[is.na(dt_activity[,1]),]
dt_activity_na
dt_activity_1[complete.cases(dt_activity_1),1]
sum(dt_activity_1[complete.cases(dt_activity_1),1])
dt_replace_na <- dt_activity
dt_replace_na[is.na(dt_replace_na[,1]),1] <- mean_not_missing
mean_not_missing <- mean(dt_activity_1[complete.cases(dt_activity_1),1])
mean_not_missing
dt_replace_na <- dt_activity
dt_replace_na[is.na(dt_replace_na[,1]),1] <- mean_not_missing
sum(dt_replace_na[complete.cases(dt_activity_1),1])
sum(dt_replace_na[complete.cases(dt_replace_na),1])
dt_steps_by_day_replaced_na
dt_replace_na <- dt_activity
dt_replace_na[is.na(dt_replace_na[,1]),1] <- mean_not_missing
dt_steps_by_day_replaced_na <- as.data.frame(xtabs(steps ~ date  , dt_replace_na))
dt_steps_by_day_replaced_na
##########################     Obtain date ###########################
# Read data Activity dataset
path <- "C:/Users/vobis/Desktop/Coursera/5. Reproducible Resreach/project 2"
name <- "repdata-data-StormData.csv"
dt_storm_backup <- data.frame()
dt_storm_backup <- read.csv(paste(path, name, sep="/"), sep = ",")
# Create a work dataframe, beside backup dataframe. Avoid extra loading of data
dt_storm <- dt_storm_backup
#################################  EXPLORING Dataset ##########################
# dataset Level
summary(dt_storm$EVTYPE)
str(dt_storm)
names(dt_storm)
head(dt_storm)
# variabele level
tail(dt_storm$REFNUM,100)
table(( dt_public_damage$FATALITIES > 0| dt_public_damage$INJURIES > 0 ))
table(( dt_public_damage$FATALITIES > 0 & dt_public_damage$INJURIES > 0 ))
table(( dt_public_damage$FATALITIES >0 ))
table(( dt_public_damage$INJURIES >0 ))
sum(dt_storm$FATALITIES)
sum(dt_storm$INJURIES)
table(dt_storm$PROPDMGEXP)
table(dt_storm$CROPDMGEXP)
table( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 )
table( dt_storm$PROPDMG > 0 & dt_storm$CROPDMG > 0 )
table(dt_storm$PROPDMG > 0 )
table(dt_storm$CROPDMG > 0 )
################################### Part 1 #########################################
# subset Data Set
# list variable
variables <- c("EVTYPE","FATALITIES","INJURIES")
colomn_nr <-  names(dt_storm) %in% variables
# subset
dt_public_damage <- dt_storm[ ( dt_storm$FATALITIES | dt_storm$INJURIES ), colomn_nr ]
dt_public_damage7500 <- dt_storm[ c(1:7500) , colomn_nr ]
# Convert EVTYPE into small letters
dt_public_damage$EVTYPE <- tolower(dt_public_damage$EVTYPE)
# aggrate
dt_fatalities <- as.data.frame(xtabs( FATALITIES ~ EVTYPE, data=dt_public_damage  ))
dt_Injuries <- as.data.frame(xtabs( INJURIES ~ EVTYPE, data=dt_public_damage  ))
# merge Date Merges
dt_totaal <- merge(x=dt_fatalities , y=dt_Injuries , by.x="EVTYPE" , by.y="EVTYPE" )
dt_totaal <- dt_totaal[  (dt_totaal$Freq.x + dt_totaal$Freq.x) >0 , ]
# add extra colomn to weigth impact event, fatal 3 vs injuries 1
dt_totaal$score <- (dt_totaal$Freq.x *3)+ (dt_totaal$Freq.y)
# sort on weigth score
dt_totaal <- dt_totaal[order(-dt_totaal$score),]
# Add colomn with margin
# totals
sum_fatal <- sum(dt_totaal$Freq.x)      # FATAL
sum_injuries <- sum(dt_totaal$Freq.y)   # iNJURIES
# Add Colomn
options(scipen=999)
dt_totaal$Freq.x_m <- round((dt_totaal$Freq.x/ sum_fatal),2)       # FATAL
dt_totaal$Freq.y_m <- round((dt_totaal$Freq.y/ sum_injuries),2)    # iNJURIES
# based on the margin, tornado is have the biggest impact. more then a derd Fatal and almost two therd of the injurie
################################################        Part 2           ########################################
##################################################################################################################1
# subset Data Set
# list variable
variables <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
colomn_nr_economic <-  names(dt_storm) %in% variables
# subset
dt_economic_damage <- dt_storm[ ( dt_storm$PROPDMG > 0 | dt_storm$CROPDMG > 0 ), colomn_nr_economic ]
# Convert Upper letters into small letters
dt_economic_damage$EVTYPE <- as.factor(tolower(dt_economic_damage$EVTYPE))                 # Event
dt_economic_damage$PROPDMGEXP <- as.factor(tolower(dt_economic_damage$PROPDMGEXP))         # Prop
dt_economic_damage$CROPDMGEXP <- as.factor(tolower(dt_economic_damage$CROPDMGEXP))               # Crop
#exclude
# exploring
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP == "K" | dt_economic_damage$PROPDMGEXP == "M" | dt_economic_damage$PROPDMGEXP == "" ), ]
dt_economic_damage[dt_economic_damage$EVTYPE == "flash flood" , ]
table(dt_economic_damage[dt_economic_damage$EVTYPE == "flash flood" , ])
summary(dt_economic_damage[ , ])
# Conclude
## based on the summary freq of all size indicators, decised that the impact of the not (K,M,B,H) are significat, is an estimation of the biggest event, to exclude those.
# Exclduding
dt_economic_damage[!(dt_economic_damage$PROPDMGEXP %in% c("h","k","m","b")) , 3]  <- ""         # prop
dt_economic_damage[!(dt_economic_damage$CROPDMGEXP %in% c("h","k","m","b")) , 5]  <- ""         # crop
# Convert into real Number
# PROP
dt_economic_damage$reel_number_prop <- 0
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("h") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("h"), 2] * 100
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("m") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("m"), 2] * 1000000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("b") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("b"), 2] * 1000000000
# CROP
dt_economic_damage$reel_number_crop <- 0
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("h") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("h"), 4] * 100
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("k") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("k"), 4] * 1000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("m") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("m"), 4] * 1000000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("b") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("b"), 4] * 1000000000
# aggrate
dt_prop <- as.data.frame(xtabs( reel_number_prop ~ EVTYPE, data=dt_economic_damage  ))
dt_crop <- as.data.frame(xtabs( reel_number_crop ~ EVTYPE, data=dt_economic_damage  ))
# merge Date Merges
dt_totaal_economic <- merge(x=dt_prop , y=dt_crop , by.x="EVTYPE" , by.y="EVTYPE" )
dt_totaal_economic <- dt_totaal_economic[  (dt_totaal_economic$Freq.x + dt_totaal_economic$Freq.x) >0 , ]
# add extra colomn to weigth impact event, fatal 3 vs injuries 1
dt_totaal_economic$score <- (dt_totaal_economic$Freq.x)+ (dt_totaal_economic$Freq.y)
# sort on weigth score
dt_totaal_economic <- dt_totaal_economic[order(-dt_totaal_economic$score),]
# Add margin
dt_totaal_economic$share <- round(dt_totaal_economic$score/sum(dt_totaal_economic$score),2)
##########################     Obtain date ###########################
# Read data Activity dataset
path <- "C:/Users/vobis/Desktop/Coursera/5. Reproducible Resreach/project 2"
name <- "repdata-data-StormData.csv"
dt_storm_backup <- data.frame()
dt_storm_backup <- read.csv(paste(path, name, sep="/"), sep = ",")
######################           Obttain data      ##################
# Read data Activity dataset
path <- getwd()
name <- "activity.csv"
dt_activity <- read.csv(paste(path, name, sep="/"), sep = ",")
sum(dt_activity_1$steps)
#####################           Proces Date      ##########################
# Part 1 - Plot and mead/Medain off step by day
# Copy data.frame in new data.frame
dt_activity_1 <- dt_activity
# Subset, exclude NA rows.
dt_activity_1 <- dt_activity_1[complete.cases(dt_activity_1),]
# aggrate by day
dt_steps_by_day <- as.data.frame(xtabs(steps ~ date  , dt_activity_1))
# plot Histogram
hist(dt_steps_by_day$Freq )
# Calcualete mean and Median
mean_activity_1 <- mean (dt_steps_by_day$Freq)
median_activity_1 <- median(dt_steps_by_day$Freq)
# Part 2 - plot average 5 Min interval
# Copy data.frame in new data.frame
dt_activity_2 <- dt_activity
# Subset, exclude NA rows.
dt_activity_2 <- dt_activity_2[complete.cases(dt_activity_2),]
# aggrate by day
dt_steps_by_day2 <- as.data.frame(aggregate(dt_activity_2$steps, by=list(dt_activity_2$interval), FUN=mean, data = dt_activity_2 ))
# Max Value
maxvalue <- max(dt_steps_by_day2$x)
dt_steps_by_day2_max <- dt_steps_by_day2[dt_steps_by_day2$x ==  maxvalue, ]
# plot
plot_part2 <- plot(x=dt_steps_by_day2$Group.1 , y= dt_steps_by_day2$x , type = "l")
# part 3 - missing Value's
# report number of missing NA
dt_activity_na <- dt_activity[is.na(dt_activity[,1]),]
missing_na <- length(dt_activity_na[,1])
# filing in missing Value's
# value for missing values
mean_not_missing <- mean(dt_activity_1[complete.cases(dt_activity_1),1])
sum(dt_replace_na[complete.cases(dt_replace_na),1])
# replece na with mean
dt_replace_na <- dt_activity
dt_replace_na[is.na(dt_replace_na[,1]),1] <- mean_not_missing
dt_steps_by_day_replaced_na <- as.data.frame(xtabs(steps ~ date  , dt_replace_na))
# plot average 3 min interval
# aggrate by day
dt_replace_na_agg <- as.data.frame(aggregate(dt_replace_na$steps, by=list(dt_replace_na$interval), FUN=mean, data = dt_replace_na))
# plot
plot(x=dt_replace_na_agg$Group.1 , y= dt_replace_na_agg$x , type = "l")
# part 4 - week /  weekend days
# Add day name to data.frame
dt_replace_na$day <- weekdays(as.Date(dt_replace_na$date), abbreviate = FALSE)
# split dataset into weekday and weekenddays
weekend  <- dt_replace_na[dt_replace_na$day %in% c("zaterdag","zondag"),]
week     <- dt_replace_na[!(dt_replace_na$day %in% c("zaterdag","zondag")),]
# aggrate by day
dt_replace_na1_weekend <- as.data.frame(aggregate(weekend$steps, by=list(weekend$interval), FUN=mean, data = weekend ))
dt_replace_na1_week <- as.data.frame(aggregate(week$steps, by=list(week$interval), FUN=mean, data = week ))
# plot
par(mfrow = c(1,2))
plot(x=dt_replace_na1_weekend$Group.1 , y = dt_replace_na1_weekend$x , type = "l")
plot(x=dt_replace_na1_week$Group.1 , y = dt_replace_na1_week$x , type = "l")
sum(dt_replace_na1_weekend$x)/2
sum(dt_replace_na1_week$x)/5
srt(dt_replace_na1_weekend)
str(dt_replace_na1_weekend)
str(weekend)
sum(weekend$steps)/2
sum(week$steps)/5
# Convert into real Number
# PROP
dt_economic_damage$reel_number_prop <- 0
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("h") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("h"), 2] * 100
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("k") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("k"), 2] * 1000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("m") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("m"), 2] * 1000000
dt_economic_damage[dt_economic_damage$PROPDMGEXP %in% c("b") , 6 ]  <- dt_economic_damage[ dt_economic_damage$PROPDMGEXP %in% c("b"), 2] * 1000000000
# CROP
dt_economic_damage$reel_number_crop <- 0
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("h") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("h"), 4] * 100
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("k") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("k"), 4] * 1000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("m") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("m"), 4] * 1000000
dt_economic_damage[dt_economic_damage$CROPDMGEXP %in% c("b") , 7 ]  <- dt_economic_damage[ dt_economic_damage$CROPDMGEXP %in% c("b"), 4] * 1000000000
